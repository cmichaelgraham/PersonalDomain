//Generated by Flashman\James Chadwick at 6/21/2015 1:13 PM
class AuthenticationService {

    private _baseUrl: string = "http://authentication.jamespchadwick.com";

    static inject = ['$http'];
    constructor(private $http: ng.IHttpService) {
    }

    public DeleteRefreshToken: (request: AuthenticationAPI.Application.Owin.Operations.Request.ByIdRequest) => ng.IPromise<AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse> = (request) => {
	    return this.$http({ method: 'post', url: this._baseUrl + '/api/DeleteRefreshToken', data: request})
                   .then((response: ng.IHttpPromiseCallbackArg<AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse>): AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse => {
                        return <AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse>response.data;
                    });
    }

    public RegisterExternalUser: (request: AuthenticationAPI.Application.Models.RegisterExternalUserDTO) => ng.IPromise<AuthenticationAPI.Application.Owin.Operations.Response.RegisterExternalUserResponse> = (request) => {
	    return this.$http({ method: 'post', url: this._baseUrl + '/api/RegisterExternalUser', data: request})
                   .then((response: ng.IHttpPromiseCallbackArg<AuthenticationAPI.Application.Owin.Operations.Response.RegisterExternalUserResponse>): AuthenticationAPI.Application.Owin.Operations.Response.RegisterExternalUserResponse => {
                        return <AuthenticationAPI.Application.Owin.Operations.Response.RegisterExternalUserResponse>response.data;
                    });
    }

    public RegisterUser: (request: AuthenticationAPI.Application.Models.RegisterUserDTO) => ng.IPromise<AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse> = (request) => {
	    return this.$http({ method: 'post', url: this._baseUrl + '/api/RegisterUser', data: request})
                   .then((response: ng.IHttpPromiseCallbackArg<AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse>): AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse => {
                        return <AuthenticationAPI.Application.Owin.Operations.Response.OperationResponse>response.data;
                    });
    }

    public GetBearerToken: (request: AuthenticationAPI.Application.Owin.Operations.Request.GetBearerTokenRequest) => ng.IPromise<AuthenticationAPI.Application.Models.BearerTokenDTO> = (request) => {
	    return this.$http({ method: 'post', url: this._baseUrl + '/api/GetBearerToken', data: request})
                   .then((response: ng.IHttpPromiseCallbackArg<AuthenticationAPI.Application.Models.BearerTokenDTO>): AuthenticationAPI.Application.Models.BearerTokenDTO => {
                        return <AuthenticationAPI.Application.Models.BearerTokenDTO>response.data;
                    });
    }

    public GetExternalLogin: (request: AuthenticationAPI.Application.Owin.Operations.Request.GetExternalLoginRequest) => ng.IPromise<AuthenticationAPI.Application.Owin.Operations.Response.ExternalLoginResponse> = (request) => {
	    return this.$http({ method: 'post', url: this._baseUrl + '/api/GetExternalLogin', data: request})
                   .then((response: ng.IHttpPromiseCallbackArg<AuthenticationAPI.Application.Owin.Operations.Response.ExternalLoginResponse>): AuthenticationAPI.Application.Owin.Operations.Response.ExternalLoginResponse => {
                        return <AuthenticationAPI.Application.Owin.Operations.Response.ExternalLoginResponse>response.data;
                    });
    }

    public GetRefreshTokens: (request: AuthenticationAPI.Application.Owin.Operations.Request.NullRequest) => ng.IPromise<AuthenticationAPI.Application.Models.RefreshTokenDTO[]> = (request) => {
	    return this.$http({ method: 'post', url: this._baseUrl + '/api/GetRefreshTokens', data: request})
                   .then((response: ng.IHttpPromiseCallbackArg<AuthenticationAPI.Application.Models.RefreshTokenDTO[]>): AuthenticationAPI.Application.Models.RefreshTokenDTO[] => {
                        return <AuthenticationAPI.Application.Models.RefreshTokenDTO[]>response.data;
                    });
    }
		
}
export = AuthenticationService;
